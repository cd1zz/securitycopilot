Descriptor:
  Name: Quarantine Request Insights
  DisplayName: Quarantine Request Insights
  DescriptionForModel: |-
    A KQL-based skill designed to enhance email security investigations by:
    - Correlating quarantine request actions (`QuarantineRequestReleaseMessage`) with corresponding approvals (`QuarantineReleaseMessage`) to provide a comprehensive view of email-related activities.
    - Extracting and presenting key details such as:
      - Action and request timestamps.
      - Email metadata: `SenderFromAddress`, `SenderDisplayName`, `Subject`.
      - User information: `RequestedBy`, `ActionBy`, and recipient details.
      - Unique identifiers (`NetworkMessageId`) for precise tracking.
    - Enabling investigators to sort and analyze events efficiently, helping identify patterns in quarantine requests and actions.
    This skill empowers security teams to track email quarantine activities, understand user actions, and ensure compliance with email security policies.
  Description: A skill to investigate and correlate email quarantine requests and approvals by retrieving key metadata and timestamps for comprehensive analysis.

SkillGroups:
  - Format: KQL
    Skills:
      - Name: QuarantineRequestInsights
        DisplayName: Quarantine Request Insights
        DescriptionForModel: |-
          Performs a KQL query to correlate quarantine request actions with their approvals. Provides details such as request and action times, email sender information, and user activity to facilitate email security investigations.
        Description: Analyze email quarantine requests and their approvals to understand user actions and email security patterns. Retrieves key details for thorough investigation.
        Settings:
          Target: Defender
          Template: |-
            let DeniedLookupTime = ago(30d);
            let RequestedLookupTime = ago(30d);
            let EmailEventLookupTime = ago(30d);
            CloudAppEvents
            | where Timestamp >= DeniedLookupTime
            | where ActionType == "QuarantineDenyReleaseMessage"
            | extend NetworkMessageId = tostring(parse_json(RawEventData)["NetworkMessageId"])
            | project-rename DeniedTime=Timestamp
            | join (CloudAppEvents
            | where Timestamp >= RequestedLookupTime
            | where ActionType == "QuarantineRequestReleaseMessage"
            | extend NetworkMessageId = tostring(parse_json(RawEventData)["NetworkMessageId"])
            | extend RecipientEmailAddress = tostring(parse_json(RawEventData)["UserId"])
            | project-rename RequestTime=Timestamp) on NetworkMessageId
            | project AccountDisplayName, NetworkMessageId, RequestTime, RecipientEmailAddress, DeniedTime
            | join EmailEvents on NetworkMessageId
            | where Timestamp >= EmailEventLookupTime
            | where RecipientEmailAddress == RecipientEmailAddress1
            | project-rename EmailTime=Timestamp
            | project-rename RequestedBy=RecipientEmailAddress
            | project-rename DeniedBy=AccountDisplayName
            | project EmailTime, SenderFromAddress, SenderDisplayName, Subject, RequestedBy, RecipientEmailAddress1, DeniedBy, DeniedTime, RequestTime,NetworkMessageId,NetworkMessageId1
            | sort by DeniedTim