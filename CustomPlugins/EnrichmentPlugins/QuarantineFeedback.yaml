Descriptor:
  Name: Quarantine Request Insights
  DisplayName: Quarantine Request Insights
  DescriptionForModel: |-
    A KQL-based skill designed to enhance email security investigations by:
    - Correlating quarantine request actions (`QuarantineRequestReleaseMessage`) with corresponding approvals (`QuarantineReleaseMessage`) to provide a comprehensive view of email-related activities.
    - Extracting and presenting key details such as:
      - Action and request timestamps.
      - Email metadata: `SenderFromAddress`, `SenderDisplayName`, `Subject`.
      - User information: `RequestedBy`, `ActionBy`, and recipient details.
      - Unique identifiers (`NetworkMessageId`) for precise tracking.
    - Enabling investigators to sort and analyze events efficiently, helping identify patterns in quarantine requests and actions.
    This skill empowers security teams to track email quarantine activities, understand user actions, and ensure compliance with email security policies.
  Description: A skill to investigate and correlate email quarantine requests and approvals by retrieving key metadata and timestamps for comprehensive analysis.

SkillGroups:
  - Format: KQL
    Skills:
      - Name: QuarantineRequestInsights
        DisplayName: Quarantine Request Insights
        DescriptionForModel: |-
          Performs a KQL query to correlate quarantine request actions with their approvals. Provides details such as request and action times, email sender information, and user activity to facilitate email security investigations.
        Description: Analyze email quarantine requests and their approvals to understand user actions and email security patterns. Retrieves key details for thorough investigation.
        Settings:
          Target: Defender
          Template: |-
            // Define the time ranges for lookup: actions, requests, and email events
            let ActionLookupTime = ago(30d);
            let RequestedLookupTime = ago(30d);
            let EmailEventLookupTime = ago(30d);
            // Query CloudAppEvents for quarantine release actions
            CloudAppEvents
            | where Timestamp >= ActionLookupTime // Filter by action time within the specified range
            | where ActionType == "QuarantineReleaseMessage" // Focus on quarantine release actions
            | extend NetworkMessageId = tostring(parse_json(RawEventData)["NetworkMessageId"]) // Extract the NetworkMessageId from the raw event data
            | project-rename ActionTime=Timestamp // Rename the timestamp for clarity
            // Join with CloudAppEvents to correlate with quarantine release requests
            | join (
                CloudAppEvents
                | where Timestamp >= RequestedLookupTime // Filter by request time within the specified range
                | where ActionType == "QuarantineRequestReleaseMessage" // Focus on quarantine request actions
                | extend NetworkMessageId = tostring(parse_json(RawEventData)["NetworkMessageId"]) // Extract the NetworkMessageId from the raw event data
                | extend RecipientEmailAddress = tostring(parse_json(RawEventData)["UserId"]) // Extract the recipient email address
                | project-rename RequestTime=Timestamp // Rename the timestamp for clarity
            ) on NetworkMessageId // Join based on the common NetworkMessageId
            // Project key details from the joined result
            | project AccountDisplayName, NetworkMessageId, RequestTime, RecipientEmailAddress, ActionTime
            // Join with EmailEvents to include additional email-related metadata
            | join EmailEvents on NetworkMessageId // Match using NetworkMessageId
            | where Timestamp >= EmailEventLookupTime // Filter by email event time within the specified range
            | where RecipientEmailAddress == RecipientEmailAddress1 // Ensure the recipient email matches
            // Rename and project key columns for the final output
            | project-rename EmailTime=Timestamp // Rename the email timestamp for clarity
            | project-rename RequestedBy=RecipientEmailAddress // Rename the requestor for clarity
            | project-rename ActionBy=AccountDisplayName // Rename the action performer for clarity
            | project EmailTime, SenderFromAddress, SenderDisplayName, Subject, RequestedBy, RecipientEmailAddress1, ActionBy, ActionTime, RequestTime, NetworkMessageId, NetworkMessageId1
            // Sort results by action time for a chronological view
            | sort by ActionTime
