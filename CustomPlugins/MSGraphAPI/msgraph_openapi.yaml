openapi: 3.0.0

info:
  title: MS Graph DLP Alerts Plugin
  description: >
    Plugin to query Microsoft Graph Security API for Data Loss Prevention (DLP) alerts.
    Supports listing DLP alerts using OData filters and retrieving full evidence details.
    Use the user_context parameter to provide natural language intent, which will be dynamically translated to an OData filter or selection criteria.
  version: "v1"

servers:
  - url: https://graph.microsoft.com/v1.0

paths:

  # List DLP alerts with OData filter support
  /security/alerts_v2:
    get:
      operationId: GetDlpAlerts
      description: >
        Get all Data Loss Prevention (DLP) alerts from Microsoft Graph Security API within a specified time range.
        Use OData filters for serviceSource and createdDateTime, e.g.,
        serviceSource eq 'dataLossPrevention' and createdDateTime ge 2024-06-10T00:00:00Z.
        The user_context parameter allows you to describe your requirements or questions in natural language (e.g., "Show high severity DLP alerts in the last 7 days").
        The model will translate user_context into a $filter, $orderby, $top, or $select query as appropriate.
      parameters:
        - in: query
          name: $filter
          schema:
            type: string
          required: false
          description: >
            OData filter string. Example: "serviceSource eq 'dataLossPrevention' and createdDateTime ge 2024-06-10T00:00:00Z".
        - in: query
          name: $orderby
          schema:
            type: string
          required: false
          description: >
            Order by clause (e.g., "createdDateTime desc").
        - in: query
          name: $top
          schema:
            type: integer
          required: false
          description: >
            Max number of records to return (pagination).
        - in: query
          name: $select
          schema:
            type: string
          required: false
          description: >
            Comma-separated list of properties to return (e.g., "id,title,severity,category,evidence").
        - in: query
          name: user_context
          schema:
            type: string
          required: false
          description: >
            Natural language description of what you want to see or analyze.
            // The model should translate user_context into OData query parameters, e.g.,
            // user_context: "Show only high severity DLP alerts from the last week"
            // Translates to: $filter=serviceSource eq 'dataLossPrevention' and severity eq 'high' and createdDateTime ge [date]
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
          description: Bad request, invalid parameters

  # Get all evidence for a specific DLP alert
  /security/alerts_v2/{alertid}:
    get:
      operationId: GetDlpAlertDetails
      description: >
        Get the full details and evidence for a specific DLP alert by alert ID.
        Use $select to return only the properties your app needs (e.g., "evidence,description,additionalData").
        The user_context parameter can describe what additional details or fields to include.
      parameters:
        - in: path
          name: alertid
          schema:
            type: string
          required: true
          description: Alert ID (e.g., dladddbeae-ecee-ad76-5400-08dda9c7aba8)
        - in: query
          name: $select
          schema:
            type: string
          required: false
          description: >
            Comma-separated list of properties to return (e.g., "evidence,description,additionalData").
        - in: query
          name: user_context
          schema:
            type: string
          required: false
          description: >
            Natural language description of what details or evidence you want to see.
            // The model should use user_context to select the most relevant alert details and evidence fields.
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
          description: Bad request, invalid parameters

  # Example: Get Entra user profile (generic, not DLP specific, optional)
  /me:
    get:
      operationId: GetEntraProfile
      description: Gets Entra profile information from the MS Graph
      responses:
        "200":
          description: OK
          content:
            application/json:
        "400":
          description: Bad request, invalid parameters
